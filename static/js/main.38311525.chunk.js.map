{"version":3,"sources":["componenets/feedback/FeedbackOption.js","componenets/statistic/Statistic.js","componenets/section/Section.js","componenets/notification/Notification.js","componenets/App.js","index.js"],"names":["FeedbackOption","good","neutral","bad","title","type","name","onClick","Statistic","total","positive","Section","children","Notification","message","App","state","handleClickGood","setState","props","step","handleClickNeutral","handleClickBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","percent","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"mLAkBeA,EAjBQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC5C,OACE,oCACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASN,GAA3C,QAGA,4BAAQI,KAAK,SAASC,KAAK,UAAUC,QAASL,GAA9C,WAGA,4BAAQG,KAAK,SAASC,KAAK,MAAMC,QAASJ,GAA1C,OAGA,4BAAKC,KCAII,EAZG,SAAC,GAA6C,IAA3CP,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKM,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9C,OACE,oCACE,oCAAUT,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWM,GACX,kDAAwBC,GAAY,EAApC,OCESC,EATC,SAAC,GAAsB,IAArBP,EAAoB,EAApBA,MAAMQ,EAAc,EAAdA,SACpB,OACI,oCACE,4BAAKR,GACJQ,ICFIC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAKA,ICKrCC,E,2MAKJC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,gBAAkB,WAChB,EAAKC,UAAS,SAACF,EAAOG,GAAR,MAAmB,CAAElB,KAAMe,EAAMf,KAAOkB,EAAMC,U,EAE9DC,mBAAqB,WACnB,EAAKH,UAAS,SAACF,EAAOG,GAAR,MAAmB,CAAEjB,QAASc,EAAMd,QAAUiB,EAAMC,U,EAEpEE,eAAiB,WACf,EAAKJ,UAAS,SAACF,EAAOG,GAAR,MAAmB,CAAEhB,IAAKa,EAAMb,IAAMgB,EAAMC,U,EAG5DG,mBAAqB,SAAAP,GAEnB,OADY,EAAKA,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAGhEqB,gCAAkC,SAAAR,GAChC,OAAOS,KAAKC,MAAO,EAAKV,MAAMf,KAAO,EAAKsB,qBAAwB,M,wEAGlE,IAAId,EAAQkB,KAAKJ,qBACbK,EAAUD,KAAKH,kCACnB,OACE,oCACE,kBAAC,EAAD,CAASpB,MAAM,yBACb,kBAAC,EAAD,CACEH,KAAM0B,KAAKV,gBACXf,QAASyB,KAAKN,mBACdlB,IAAKwB,KAAKL,eACVlB,MAAM,eAER,oCACa,IAAVK,EACC,kBAAC,EAAD,CAAcK,QAAQ,sBAEtB,kBAAC,EAAD,CACEb,KAAM0B,KAAKX,MAAMf,KACjBC,QAASyB,KAAKX,MAAMd,QACpBC,IAAKwB,KAAKX,MAAMb,IAChBM,MAAOA,EACPC,SAAUkB,W,GAjDRC,aAAZd,EACGe,aAAe,CACpBV,KAAM,GAyDKL,QC7DfgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.38311525.chunk.js","sourcesContent":["import React from \"react\";\r\nconst FeedbackOption = ({ good, neutral, bad, title }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" name=\"good\" onClick={good}>\r\n        good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={neutral}>\r\n        neutral\r\n      </button>\r\n      <button type=\"button\" name=\"bad\" onClick={bad}>\r\n        bad\r\n      </button>\r\n      <h2>{title}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOption;\r\n","import React from \"react\";\r\nconst Statistic = ({ good, neutral, bad, total, positive }) => {\r\n  return (\r\n    <>\r\n      <p>Good :{good}</p>\r\n      <p>Neutral :{neutral}</p>\r\n      <p>Bad :{bad}</p>\r\n      <p>Total :{total}</p>\r\n      <p>PositivePersentage :{positive || 0}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nconst Section = ({title,children}) => {\r\n    return (\r\n        <>\r\n          <h2>{title}</h2>\r\n          {children}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nconst Notification = ({ message }) => <h4>{message}</h4>;\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport FeedbackOption from \"./feedback/FeedbackOption\";\r\nimport Statistic from \"./statistic/Statistic\";\r\nimport Section from \"./section/Section\";\r\nimport Notification from \"./notification/Notification\";\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    step: 1\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  handleClickGood = () => {\r\n    this.setState((state, props) => ({ good: state.good + props.step }));\r\n  };\r\n  handleClickNeutral = () => {\r\n    this.setState((state, props) => ({ neutral: state.neutral + props.step }));\r\n  };\r\n  handleClickBad = () => {\r\n    this.setState((state, props) => ({ bad: state.bad + props.step }));\r\n  };\r\n\r\n  countTotalFeedback = state => {\r\n    let total = this.state.good + this.state.neutral + this.state.bad;\r\n    return total;\r\n  };\r\n  countPositiveFeedbackPercentage = state => {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n  render() {\r\n    let total = this.countTotalFeedback();\r\n    let percent = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOption\r\n            good={this.handleClickGood}\r\n            neutral={this.handleClickNeutral}\r\n            bad={this.handleClickBad}\r\n            title=\"Statistics\"\r\n          />\r\n          <>\r\n            {total === 0 ? (\r\n              <Notification message=\"No feedback given\" />\r\n            ) : (\r\n              <Statistic\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={total}\r\n                positive={percent}\r\n              />\r\n            )}\r\n          </>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componenets/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}